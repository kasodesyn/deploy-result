{
  "address": "0x47d98d066d752b30d7e4597ff50b464e22fe986b",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AddAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IssueRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LOGUserVaultAdr",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ManagerRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RedeemRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RemoveAdmin",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "adminClaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adminList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allOwnerPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "black_list",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "poolTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokensAmount",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokensAmountIR",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "isPerfermance",
          "type": "bool"
        }
      ],
      "name": "depositIssueRedeemPToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "poolTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokensAmount",
          "type": "uint256[]"
        }
      ],
      "name": "depositManagerToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBNB",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "getManagerClaimBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "bools",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerPercentage",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_ownerPercentage",
          "type": "uint256[]"
        }
      ],
      "name": "initHandle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "isClosePool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issue_ratio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "managerClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "managerClaimList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Vault.claimTokenInfo[]",
          "name": "claimTokenInfos",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "managerClaimRecordList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "decimals",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Vault.claimTokenInfo[]",
              "name": "tokens",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Vault.claimRecordInfo[]",
          "name": "claimRecordInfos",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager_ratio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "perfermance_ratio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolIssueTokenAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenAmount",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolIssueTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolManagerTokenAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenAmount",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolManagerTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolPerfermanceTokenAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenAmount",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolPerfermanceTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolRedeemTokenAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenAmount",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolRedeemTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_issue_tokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_issue_tokenList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pool_manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pool_manager_isClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_manager_tokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_manager_tokenList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_perfermance_tokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_perfermance_tokenList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_redeem_tokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_redeem_tokenList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "record_List",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "record_number",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeem_ratio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ownerPercentage",
          "type": "uint256"
        }
      ],
      "name": "setAddAdminList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "bools",
          "type": "bool"
        }
      ],
      "name": "setBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "setCrpFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setIssueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setManagerRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setPerfermanceRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setRedeemRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "setUserVaultAdr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "total_ratio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfd5992b5d2176b12503a0aa15afe28c293682ab82523e92c276fc5b3144bc8f7",
  "receipt": {
    "to": null,
    "from": "0x595b85b4a418e3b8df897d02f5bd49167d00862f",
    "contractAddress": "0x47d98d066d752b30d7e4597ff50b464e22fe986b",
    "transactionIndex": "0x14",
    "gasUsed": "0x4735dc",
    "logsBloom": "0x
    "blockHash": "0x268204751cf49319d9e7d9e1021a1c1eaffa597b2cd67c7ccebf90768725b1da",
    "transactionHash": "0xd81903cd747858f627b546fc8db635b001ae320cc282e107a7323ef9e69f1d15",
    "logs": [],
    "blockNumber": "0x7996aa",
    "cumulativeGasUsed": "0x6f1b28",
    "status": "0x1"
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "fb819474c91a9f9b6eff6d48e5bd8bf9",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IssueRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LOGUserVaultAdr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ManagerRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RedeemRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RemoveAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"adminClaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allOwnerPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"black_list\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmountIR\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"isPerfermance\",\"type\":\"bool\"}],\"name\":\"depositIssueRedeemPToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmount\",\"type\":\"uint256[]\"}],\"name\":\"depositManagerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBNB\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getManagerClaimBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"bools\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerPercentage\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ownerPercentage\",\"type\":\"uint256[]\"}],\"name\":\"initHandle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isClosePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issue_ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"managerClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"managerClaimList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Vault.claimTokenInfo[]\",\"name\":\"claimTokenInfos\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"managerClaimRecordList\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Vault.claimTokenInfo[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Vault.claimRecordInfo[]\",\"name\":\"claimRecordInfos\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager_ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"perfermance_ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolIssueTokenAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolIssueTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolManagerTokenAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolManagerTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolPerfermanceTokenAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolPerfermanceTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolRedeemTokenAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolRedeemTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool_issue_tokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool_issue_tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool_manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool_manager_isClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool_manager_tokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool_manager_tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool_perfermance_tokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool_perfermance_tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool_redeem_tokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool_redeem_tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"record_List\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"record_number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem_ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ownerPercentage\",\"type\":\"uint256\"}],\"name\":\"setAddAdminList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"bools\",\"type\":\"bool\"}],\"name\":\"setBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"setCrpFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setIssueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setManagerRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setPerfermanceRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setRedeemRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"setUserVaultAdr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Desyn Labs\",\"kind\":\"dev\",\"methods\":{\"getController()\":{\"details\":\"external for gas optimization\",\"returns\":{\"_0\":\"address - of the owner (AKA controller)\"}},\"removeOwner(address)\":{\"details\":\"Allows to remove an owner. Transaction has to be sent by wallet.\",\"params\":{\"owner\":\"Address of owner.\"}},\"setAddAdminList(address,uint256)\":{\"details\":\"external for gas optimization\",\"params\":{\"newOwner\":\"- address of new owner\"}},\"setController(address)\":{\"details\":\"external for gas optimization\",\"params\":{\"newOwner\":\"- address of new owner\"}}},\"title\":\"Vault managerFee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getController()\":{\"notice\":\"Returns the address of the current owner\"},\"setAddAdminList(address,uint256)\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`).         Can only be called by the current owner\"},\"setController(address)\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`).         Can only be called by the current owner\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deploy/Vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/deploy/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\nlibrary SafeMath {\\n    function add(uint a, uint b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint a,\\n        uint b,\\n        string memory errorMessage\\n    ) internal pure returns (uint) {\\n        require(b <= a, errorMessage);\\n        uint c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint a,\\n        uint b,\\n        string memory errorMessage\\n    ) internal pure returns (uint) {\\n        require(b > 0, errorMessage);\\n        uint c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    function mod(uint a, uint b) internal pure returns (uint) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    function mod(\\n        uint a,\\n        uint b,\\n        string memory errorMessage\\n    ) internal pure returns (uint) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\\nlibrary Address {\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(account)\\n        }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    function sendValue(address payable recipient, uint amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint weiValue,\\n        string memory errorMessage\\n    ) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            if (returndata.length > 0) {\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\\npragma solidity 0.6.12;\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../utils/DesynOwnable.sol\\\";\\n// Contracts\\npragma experimental ABIEncoderV2;\\n\\ninterface ICRPPool {\\n    function getController() external view returns (address);\\n\\n    enum Etypes {\\n        OPENED,\\n        CLOSED\\n    }\\n\\n    function etype() external view returns (Etypes);\\n}\\n\\ninterface IToken {\\n    function decimals() external view returns (uint);\\n}\\n\\ninterface IUserVault {\\n    function depositToken(\\n        address pool,\\n        uint types,\\n        address[] calldata poolTokens,\\n        uint[] calldata tokensAmount\\n    ) external;\\n}\\n\\ninterface IDesynOwnable {\\n    function getOwners() external view returns (address[] memory);\\n\\n    function getOwnerPercentage() external view returns (uint[] memory);\\n\\n    function allOwnerPercentage() external view returns (uint);\\n}\\n\\ninterface ICRPFactory {\\n    function isCrp(address addr) external view returns (bool);\\n}\\n\\n/**\\n * @author Desyn Labs\\n * @title Vault managerFee\\n */\\ncontract Vault is DesynOwnable {\\n    using SafeMath for uint;\\n    using Address for address;\\n\\n    struct claimTokenInfo {\\n        address token;\\n        uint decimals;\\n        uint amount;\\n    }\\n\\n    event ManagerRatio(address indexed caller, uint indexed amount);\\n    event LOGUserVaultAdr(address indexed manager, address indexed caller);\\n    event IssueRatio(address indexed caller, uint indexed amount);\\n    event RedeemRatio(address indexed caller, uint indexed amount);\\n    struct claimRecordInfo {\\n        uint time;\\n        claimTokenInfo[] tokens;\\n    }\\n    ICRPFactory crpFactory;\\n    //pool=>manager\\n    mapping(address => address) public pool_manager;\\n    //managerFee list\\n    mapping(address => address[]) public pool_manager_tokenList;\\n    mapping(address => uint[]) public pool_manager_tokenAmount;\\n    //issueFee list\\n    mapping(address => address[]) public pool_issue_tokenList;\\n    mapping(address => uint[]) public pool_issue_tokenAmount;\\n    //redeemFee list\\n    mapping(address => address[]) public pool_redeem_tokenList;\\n    mapping(address => uint[]) public pool_redeem_tokenAmount;\\n    //perfermanceFee list\\n    mapping(address => address[]) public pool_perfermance_tokenList;\\n    mapping(address => uint[]) public pool_perfermance_tokenAmount;\\n    //pool isClaim\\n    mapping(address => bool) public pool_manager_isClaim;\\n    mapping(address => bool) public black_list;\\n    //history record\\n    mapping(address => uint) public record_number;\\n    mapping(address => mapping(uint => claimRecordInfo)) public record_List;\\n    //UserVault address\\n    address public userVault;\\n    uint public total_ratio = 1000;\\n    uint public manager_ratio = 200;\\n    uint public issue_ratio = 200;\\n    uint public redeem_ratio = 200;\\n    uint public perfermance_ratio = 200;\\n\\n    constructor() public {}\\n\\n    receive() external payable {}\\n\\n    function depositManagerToken(address[] calldata poolTokens, uint[] calldata tokensAmount) public {\\n        require(crpFactory.isCrp(msg.sender), \\\"invalid address\\\");\\n        require(poolTokens.length == tokensAmount.length, \\\"Token list length is not eequalqu\\\");\\n        if (pool_manager[msg.sender] == address(0)) {\\n            address manager_address = ICRPPool(msg.sender).getController();\\n            pool_manager[msg.sender] = manager_address;\\n        }\\n        address[] memory _pool_tokenList = pool_manager_tokenList[msg.sender];\\n        uint[] memory _pool_tokenAmount = pool_manager_tokenAmount[msg.sender];\\n        (address[] memory new_pool_tokenList, uint[] memory new_pool_tokenAmount) = communaldepositToken(poolTokens, tokensAmount, msg.sender, _pool_tokenList, _pool_tokenAmount);\\n        pool_manager_tokenList[msg.sender] = new_pool_tokenList;\\n        pool_manager_tokenAmount[msg.sender] = new_pool_tokenAmount;\\n        pool_manager_isClaim[msg.sender] = true;\\n          if (isClosePool(msg.sender)) {\\n            try this.managerClaim(msg.sender) {} catch {}\\n          }\\n        \\n    }\\n\\n    function depositIssueRedeemPToken(\\n        address[] calldata poolTokens,\\n        uint[] calldata tokensAmount,\\n        uint[] calldata tokensAmountIR,\\n        bool isPerfermance\\n    ) public {\\n        require(crpFactory.isCrp(msg.sender), \\\"invalid address\\\");\\n        require(poolTokens.length == tokensAmount.length, \\\"Token list length is not eequalqu\\\");\\n        if (pool_manager[msg.sender] == address(0)) {\\n            address manager_address = ICRPPool(msg.sender).getController();\\n            pool_manager[msg.sender] = manager_address;\\n        }\\n        address[] memory _pool_tokenList = pool_issue_tokenList[msg.sender];\\n        uint[] memory _pool_tokenAmount = pool_issue_tokenAmount[msg.sender];\\n        if (!isPerfermance) {\\n            (address[] memory new_pool_tokenList, uint[] memory new_pool_tokenAmount) = communaldepositToken(\\n                poolTokens,\\n                tokensAmount,\\n                msg.sender,\\n                _pool_tokenList,\\n                _pool_tokenAmount\\n            );\\n            pool_issue_tokenList[msg.sender] = new_pool_tokenList;\\n            pool_issue_tokenAmount[msg.sender] = new_pool_tokenAmount;\\n        } else {\\n            (\\n                address[] memory new_pool_tokenList,\\n                uint[] memory new_pool_tokenAmount,\\n                address[] memory new_pool_tokenListP,\\n                uint[] memory new_pool_tokenAmountP\\n            ) = communaldepositTokenNew(poolTokens, tokensAmount, tokensAmountIR, msg.sender);\\n            pool_redeem_tokenList[msg.sender] = new_pool_tokenList;\\n            pool_perfermance_tokenList[msg.sender] = new_pool_tokenListP;\\n            pool_redeem_tokenAmount[msg.sender] = new_pool_tokenAmount;\\n            pool_perfermance_tokenAmount[msg.sender] = new_pool_tokenAmountP;\\n        }\\n\\n        pool_manager_isClaim[msg.sender] = true;\\n               if (isClosePool(msg.sender)) {\\n            try this.managerClaim(msg.sender) {} catch {}\\n          }\\n    }\\n\\n    function communaldepositToken(\\n        address[] calldata poolTokens,\\n        uint[] calldata tokensAmount,\\n        address poolAdr,\\n        address[] memory _pool_tokenList,\\n        uint[] memory _pool_tokenAmount\\n    ) internal returns (address[] memory new_pool_tokenList, uint[] memory new_pool_tokenAmount) {\\n        //old\\n        //new\\n        new_pool_tokenList = new address[](poolTokens.length);\\n        new_pool_tokenAmount = new uint[](poolTokens.length);\\n        if ((_pool_tokenList.length == _pool_tokenAmount.length && _pool_tokenList.length == 0) || !pool_manager_isClaim[poolAdr]) {\\n            for (uint i = 0; i < poolTokens.length; i++) {\\n                address t = poolTokens[i];\\n                uint tokenBalance = tokensAmount[i];\\n                IERC20(t).transferFrom(msg.sender, address(this), tokenBalance);\\n                new_pool_tokenList[i] = poolTokens[i];\\n                new_pool_tokenAmount[i] = tokensAmount[i];\\n            }\\n        } else {\\n            for (uint k = 0; k < poolTokens.length; k++) {\\n                if (_pool_tokenList[k] == poolTokens[k]) {\\n                    address t = poolTokens[k];\\n                    uint tokenBalance = tokensAmount[k];\\n                    IERC20(t).transferFrom(msg.sender, address(this), tokenBalance);\\n                    new_pool_tokenList[k] = poolTokens[k];\\n                    new_pool_tokenAmount[k] = _pool_tokenAmount[k].add(tokenBalance);\\n                }\\n            }\\n        }\\n        return (new_pool_tokenList, new_pool_tokenAmount);\\n    }\\n\\n    function communaldepositTokenNew(\\n        address[] calldata poolTokens,\\n        uint[] calldata tokensAmount,\\n        uint[] calldata tokensAmountIR,\\n        address poolAdr\\n    )\\n        internal\\n        returns (\\n            address[] memory new_pool_tokenList,\\n            uint[] memory new_pool_tokenAmount,\\n            address[] memory new_pool_tokenListP,\\n            uint[] memory new_pool_tokenAmountP\\n        )\\n    {\\n        //old\\n        //new\\n        new_pool_tokenList = new address[](poolTokens.length);\\n        new_pool_tokenAmount = new uint[](poolTokens.length);\\n        new_pool_tokenListP = new address[](poolTokens.length);\\n        new_pool_tokenAmountP = new uint[](poolTokens.length);\\n        //issue_redeem\\n        if ((pool_redeem_tokenList[poolAdr].length == pool_redeem_tokenAmount[poolAdr].length && pool_redeem_tokenList[poolAdr].length == 0) || !pool_manager_isClaim[poolAdr]) {\\n            for (uint i = 0; i < poolTokens.length; i++) {\\n                uint tokenBalance = tokensAmount[i];\\n                IERC20(poolTokens[i]).transferFrom(msg.sender, address(this), tokenBalance);\\n                new_pool_tokenList[i] = poolTokens[i];\\n                new_pool_tokenAmount[i] = tokensAmountIR[i];\\n            }\\n        } else {\\n            for (uint k = 0; k < poolTokens.length; k++) {\\n                if (pool_redeem_tokenList[poolAdr][k] == poolTokens[k]) {\\n                    uint tokenBalance = tokensAmount[k];\\n                    IERC20(poolTokens[k]).transferFrom(msg.sender, address(this), tokenBalance);\\n                    new_pool_tokenList[k] = poolTokens[k];\\n                    new_pool_tokenAmount[k] = pool_redeem_tokenAmount[poolAdr][k].add(tokensAmountIR[k]);\\n                }\\n            }\\n        }\\n        //perfermance\\n        if (\\n            (pool_perfermance_tokenList[poolAdr].length == pool_perfermance_tokenAmount[poolAdr].length && pool_perfermance_tokenList[poolAdr].length == 0) ||\\n            !pool_manager_isClaim[poolAdr]\\n        ) {\\n            for (uint i = 0; i < poolTokens.length; i++) {\\n                new_pool_tokenListP[i] = poolTokens[i];\\n                new_pool_tokenAmountP[i] = tokensAmount[i].sub(tokensAmountIR[i]);\\n            }\\n        } else {\\n            for (uint k = 0; k < poolTokens.length; k++) {\\n                new_pool_tokenListP[k] = poolTokens[k];\\n                new_pool_tokenAmountP[k] = pool_perfermance_tokenAmount[poolAdr][k].add(tokensAmount[k].sub(tokensAmountIR[k]));\\n            }\\n        }\\n\\n        return (new_pool_tokenList, new_pool_tokenAmount, new_pool_tokenListP, new_pool_tokenAmountP);\\n    }\\n\\n    function poolManagerTokenList(address pool) public view returns (address[] memory tokens) {\\n        return pool_manager_tokenList[pool];\\n    }\\n\\n    function poolManagerTokenAmount(address pool) public view returns (uint[] memory tokenAmount) {\\n        return pool_manager_tokenAmount[pool];\\n    }\\n\\n    function poolIssueTokenList(address pool) public view returns (address[] memory tokens) {\\n        return pool_issue_tokenList[pool];\\n    }\\n\\n    function poolRedeemTokenList(address pool) public view returns (address[] memory tokens) {\\n        return pool_redeem_tokenList[pool];\\n    }\\n\\n    function poolIssueTokenAmount(address pool) public view returns (uint[] memory tokenAmount) {\\n        return pool_issue_tokenAmount[pool];\\n    }\\n\\n    function poolRedeemTokenAmount(address pool) public view returns (uint[] memory tokenAmount) {\\n        return pool_redeem_tokenAmount[pool];\\n    }\\n\\n    function poolPerfermanceTokenList(address pool) public view returns (address[] memory tokens) {\\n        return pool_perfermance_tokenList[pool];\\n    }\\n\\n    function poolPerfermanceTokenAmount(address pool) public view returns (uint[] memory tokenAmount) {\\n        return pool_perfermance_tokenAmount[pool];\\n    }\\n\\n    function getManagerClaimBool(address pool) public view returns (bool bools) {\\n        bools = pool_manager_isClaim[pool];\\n    }\\n\\n    function setBlackList(address pool, bool bools) public onlyOwner {\\n        black_list[pool] = bools;\\n    }\\n\\n    function setUserVaultAdr(address adr) public onlyOwner {\\n        require(adr != address(0), \\\"Address is Zero\\\");\\n        userVault = adr;\\n        emit LOGUserVaultAdr(adr, msg.sender);\\n    }\\n\\n    function setCrpFactory(address adr) public onlyOwner {\\n        crpFactory = ICRPFactory(adr);\\n    }\\n\\n    function adminClaimToken(\\n        address token,\\n        address user,\\n        uint amount\\n    ) public onlyOwner {\\n        IERC20(token).transfer(user, amount);\\n    }\\n\\n    function getBNB() public payable onlyOwner {\\n        msg.sender.transfer(address(this).balance);\\n    }\\n\\n    function setManagerRatio(uint amount) public onlyOwner {\\n        require(amount <= total_ratio, \\\"Maximum limit exceeded\\\");\\n        manager_ratio = amount;\\n        emit ManagerRatio(msg.sender, amount);\\n    }\\n\\n    function setIssueRatio(uint amount) public onlyOwner {\\n        require(amount <= total_ratio, \\\"Maximum limit exceeded\\\");\\n        issue_ratio = amount;\\n        emit IssueRatio(msg.sender, amount);\\n    }\\n\\n    function setRedeemRatio(uint amount) public onlyOwner {\\n        require(amount <= total_ratio, \\\"Maximum limit exceeded\\\");\\n        redeem_ratio = amount;\\n        emit RedeemRatio(msg.sender, amount);\\n    }\\n\\n    function setPerfermanceRatio(uint amount) public onlyOwner {\\n        perfermance_ratio = amount;\\n    }\\n\\n    function managerClaim(address pool) public {\\n        require(crpFactory.isCrp(pool), \\\"invalid address\\\");\\n        address manager_address = ICRPPool(pool).getController();\\n        address[] memory _pool_manager_tokenList = pool_manager_tokenList[pool].length != 0\\n            ? pool_manager_tokenList[pool]\\n            : (\\n                pool_issue_tokenList[pool].length != 0\\n                    ? pool_issue_tokenList[pool]\\n                    : (pool_redeem_tokenList[pool].length != 0 ? pool_redeem_tokenList[pool] : pool_perfermance_tokenList[pool])\\n            );\\n        require(!black_list[pool], \\\"The pool manager is not claimed\\\");\\n        require(pool_manager[pool] == manager_address, \\\"claim is not manager\\\");\\n        require(_pool_manager_tokenList.length > 0, \\\"The pool is not manager fee\\\");\\n        require(pool_manager_isClaim[pool], \\\"The pool manager is claim\\\");\\n        pool_manager_isClaim[pool] = false;\\n        //record\\n        claimRecordInfo storage recordInfo = record_List[pool][record_number[pool].add(1)];\\n        delete recordInfo.time;\\n        delete recordInfo.tokens;\\n        recordInfo.time = block.timestamp;\\n        uint[] memory managerTokenAmount = new uint[](_pool_manager_tokenList.length);\\n        uint[] memory issueTokenAmount = new uint[](_pool_manager_tokenList.length);\\n        uint[] memory redeemTokenAmount = new uint[](_pool_manager_tokenList.length);\\n        uint[] memory perfermanceTokenAmount = new uint[](_pool_manager_tokenList.length);\\n        for (uint i = 0; i < _pool_manager_tokenList.length; i++) {\\n            uint balance;\\n            claimTokenInfo memory tokenInfo;\\n            (balance, managerTokenAmount[i], issueTokenAmount[i], redeemTokenAmount[i], perfermanceTokenAmount[i]) = computeBalance(i, pool);\\n            address t = _pool_manager_tokenList[i];\\n            tokenInfo.token = t;\\n            tokenInfo.amount = balance;\\n            tokenInfo.decimals = IToken(t).decimals();\\n            recordInfo.tokens.push(tokenInfo);\\n            transferHandle(pool, manager_address, t, balance);\\n        }\\n        if (isClosePool(pool)) {\\n            recordUserVault(pool, _pool_manager_tokenList, managerTokenAmount, issueTokenAmount, redeemTokenAmount, perfermanceTokenAmount);\\n        }\\n\\n        record_number[pool] = record_number[pool].add(1);\\n        record_List[pool][record_number[pool]] = recordInfo;\\n        clearPool(pool);\\n    }\\n\\n    function recordUserVault(\\n        address pool,\\n        address[] memory tokenList,\\n        uint[] memory managerTokenAmount,\\n        uint[] memory issueTokenAmount,\\n        uint[] memory redeemTokenAmount,\\n        uint[] memory perfermanceTokenAmount\\n    ) internal {\\n        uint[] memory _pool_manager_tokenAmount = pool_manager_tokenAmount[pool];\\n        uint[] memory _pool_issue_tokenAmount = pool_issue_tokenAmount[pool];\\n        uint[] memory _pool_redeem_tokenAmount = pool_redeem_tokenAmount[pool];\\n        uint[] memory _pool_perfermance_tokenAmount = pool_perfermance_tokenAmount[pool];\\n        if (_pool_manager_tokenAmount.length == 0 ? false : true) {\\n            IUserVault(userVault).depositToken(pool, 0, tokenList, managerTokenAmount);\\n        }\\n        if (_pool_issue_tokenAmount.length == 0 ? false : true) {\\n            IUserVault(userVault).depositToken(pool, 1, tokenList, issueTokenAmount);\\n        }\\n        if (_pool_redeem_tokenAmount.length == 0 ? false : true) {\\n            IUserVault(userVault).depositToken(pool, 2, tokenList, redeemTokenAmount);\\n        }\\n        if (_pool_perfermance_tokenAmount.length == 0 ? false : true) {\\n            IUserVault(userVault).depositToken(pool, 3, tokenList, perfermanceTokenAmount);\\n        }\\n    }\\n\\n    function transferHandle(\\n        address pool,\\n        address manager_address,\\n        address t,\\n        uint balance\\n    ) internal {\\n        if (!isClosePool(pool)) {\\n            if (manager_address.isContract()) {\\n                address poolAdr = pool;\\n                address[] memory managerAddressList = IDesynOwnable(poolAdr).getOwners();\\n                uint[] memory ownerPercentage = IDesynOwnable(poolAdr).getOwnerPercentage();\\n                uint allOwnerPercentage = IDesynOwnable(poolAdr).allOwnerPercentage();\\n                for (uint k = 0; k < managerAddressList.length; k++) {\\n                    IERC20(t).transfer(managerAddressList[k], balance.mul(ownerPercentage[k]).div(allOwnerPercentage));\\n                }\\n            } else {\\n                IERC20(t).transfer(manager_address, balance);\\n            }\\n        } else {\\n            IERC20(t).transfer(userVault, balance);\\n        }\\n    }\\n\\n    function computeBalance(uint i, address pool)\\n        internal\\n        view\\n        returns (\\n            uint balance,\\n            uint balanceOne,\\n            uint balanceTwo,\\n            uint balanceThree,\\n            uint balanceFour\\n        )\\n    {\\n        uint[] memory _pool_manager_tokenAmount = pool_manager_tokenAmount[pool];\\n        uint[] memory _pool_issue_tokenAmount = pool_issue_tokenAmount[pool];\\n        uint[] memory _pool_redeem_tokenAmount = pool_redeem_tokenAmount[pool];\\n        uint[] memory _pool_perfermance_tokenAmount = pool_perfermance_tokenAmount[pool];\\n\\n        //manager fee\\n        if (_pool_manager_tokenAmount.length == 0 ? false : true) {\\n            balanceOne = _pool_manager_tokenAmount[i].mul(manager_ratio).div(total_ratio);\\n            balance = balance.add(balanceOne);\\n        }\\n        if (_pool_issue_tokenAmount.length == 0 ? false : true) {\\n            balanceTwo = _pool_issue_tokenAmount[i].mul(issue_ratio).div(total_ratio);\\n            balance = balance.add(balanceTwo);\\n        }\\n        if (_pool_redeem_tokenAmount.length == 0 ? false : true) {\\n            balanceThree = _pool_redeem_tokenAmount[i].mul(redeem_ratio).div(total_ratio);\\n            balance = balance.add(balanceThree);\\n        }\\n        if (_pool_perfermance_tokenAmount.length == 0 ? false : true) {\\n            balanceFour = _pool_perfermance_tokenAmount[i].mul(perfermance_ratio).div(total_ratio);\\n            balance = balance.add(balanceFour);\\n        }\\n    }\\n\\n    function isClosePool(address pool) public view returns (bool) {\\n        return ICRPPool(pool).etype() == ICRPPool.Etypes.CLOSED;\\n    }\\n\\n    function clearPool(address pool) internal {\\n        pool_manager_tokenAmount[pool] = new uint[](0);\\n        pool_manager_tokenList[pool] = new address[](0);\\n        pool_issue_tokenAmount[pool] = new uint[](0);\\n        pool_issue_tokenList[pool] = new address[](0);\\n        pool_redeem_tokenAmount[pool] = new uint[](0);\\n        pool_redeem_tokenList[pool] = new address[](0);\\n        pool_perfermance_tokenAmount[pool] = new uint[](0);\\n        pool_perfermance_tokenList[pool] = new address[](0);\\n    }\\n\\n    function managerClaimRecordList(address pool) public view returns (claimRecordInfo[] memory claimRecordInfos) {\\n        uint num = record_number[pool];\\n        claimRecordInfo[] memory records = new claimRecordInfo[](num);\\n        for (uint i = 1; i < num + 1; i++) {\\n            claimRecordInfo memory record;\\n            record = record_List[pool][i];\\n            records[i.sub(1)] = record;\\n        }\\n        return records;\\n    }\\n\\n    function managerClaimList(address pool) public view returns (claimTokenInfo[] memory claimTokenInfos) {\\n        address[] memory _pool_manager_tokenList = pool_manager_tokenList[pool].length != 0\\n            ? pool_manager_tokenList[pool]\\n            : (\\n                pool_issue_tokenList[pool].length != 0\\n                    ? pool_issue_tokenList[pool]\\n                    : (pool_redeem_tokenList[pool].length != 0 ? pool_redeem_tokenList[pool] : pool_perfermance_tokenList[pool])\\n            );\\n        uint[] memory _pool_manager_tokenAmount = pool_manager_tokenAmount[pool];\\n        uint[] memory _pool_issue_tokenAmount = pool_issue_tokenAmount[pool];\\n        uint[] memory _pool_redeem_tokenAmount = pool_redeem_tokenAmount[pool];\\n        uint[] memory _pool_perfermance_tokenAmount = pool_perfermance_tokenAmount[pool];\\n        claimTokenInfo[] memory infos = new claimTokenInfo[](_pool_manager_tokenList.length);\\n        for (uint i = 0; i < _pool_manager_tokenList.length; i++) {\\n            {\\n                claimTokenInfo memory tokenInfo;\\n                tokenInfo.token = _pool_manager_tokenList[i];\\n                uint balance;\\n                if (_pool_manager_tokenAmount.length == 0 ? false : true) {\\n                    uint balanceOne = _pool_manager_tokenAmount[i].mul(manager_ratio).div(total_ratio);\\n                    balance = balance.add(balanceOne);\\n                }\\n                if (_pool_issue_tokenAmount.length == 0 ? false : true) {\\n                    uint balanceTwo = _pool_issue_tokenAmount[i].mul(issue_ratio).div(total_ratio);\\n                    balance = balance.add(balanceTwo);\\n                }\\n                if (_pool_redeem_tokenAmount.length == 0 ? false : true) {\\n                    uint balanceThree = _pool_redeem_tokenAmount[i].mul(redeem_ratio).div(total_ratio);\\n                    balance = balance.add(balanceThree);\\n                }\\n                if (_pool_perfermance_tokenAmount.length == 0 ? false : true) {\\n                    uint balanceFour = _pool_perfermance_tokenAmount[i].mul(perfermance_ratio).div(total_ratio);\\n                    balance = balance.add(balanceFour);\\n                }\\n                tokenInfo.amount = balance;\\n                tokenInfo.decimals = IToken(_pool_manager_tokenList[i]).decimals();\\n                infos[i] = tokenInfo;\\n            }\\n        }\\n\\n        return infos;\\n    }\\n}\\n\",\"keccak256\":\"0x198298b095e9ae00acaa4902f522c5989da4a955330f1f12826573513ee06597\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\n// Interface declarations\\n\\n/* solhint-disable func-order */\\n\\ninterface IERC20 {\\n    // Emitted when the allowance of a spender for an owner is set by a call to approve.\\n    // Value is the new allowance\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n\\n    // Emitted when value tokens are moved from one account (from) to another (to).\\n    // Note that value may be zero\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    // Returns the amount of tokens in existence\\n    function totalSupply() external view returns (uint);\\n\\n    // Returns the amount of tokens owned by account\\n    function balanceOf(address account) external view returns (uint);\\n\\n    // Returns the decimals of tokens\\n    function decimals() external view returns (uint8);\\n\\n    function symbol() external view returns (string memory);\\n\\n    // Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner\\n    // through transferFrom. This is zero by default\\n    // This value changes when approve or transferFrom are called\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    // Sets amount as the allowance of spender over the caller\\u2019s tokens\\n    // Returns a boolean value indicating whether the operation succeeded\\n    // Emits an Approval event.\\n    function approve(address spender, uint amount) external returns (bool);\\n\\n    // Moves amount tokens from the caller\\u2019s account to recipient\\n    // Returns a boolean value indicating whether the operation succeeded\\n    // Emits a Transfer event.\\n    function transfer(address recipient, uint amount) external returns (bool);\\n\\n    // Moves amount tokens from sender to recipient using the allowance mechanism\\n    // Amount is then deducted from the caller\\u2019s allowance\\n    // Returns a boolean value indicating whether the operation succeeded\\n    // Emits a Transfer event\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0xfe22b6d6029b400b9cce7f9b39c546f99cd6922b2fd926e480e2b4d476ab26f8\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/DesynOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract DesynOwnable {\\n    // State variables\\n\\n    address private _owner;\\n    mapping(address => bool) public adminList;\\n    address[] public owners;\\n    uint[] public ownerPercentage;\\n    uint public allOwnerPercentage;\\n    // Event declarations\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event AddAdmin(address indexed newAdmin, uint indexed amount);\\n    event RemoveAdmin(address indexed oldAdmin, uint indexed amount);\\n\\n    // Modifiers\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"ERR_NOT_CONTROLLER\\\");\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(adminList[msg.sender] || msg.sender == _owner, \\\"onlyAdmin\\\");\\n        _;\\n    }\\n\\n    // Function declarations\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() internal {\\n        _owner = msg.sender;\\n    }\\n\\n    function initHandle(address[] memory _owners, uint[] memory _ownerPercentage) external onlyOwner {\\n        require(_owners.length == _ownerPercentage.length, \\\"ownerP\\\");\\n        for (uint i = 0; i < _owners.length; i++) {\\n            allOwnerPercentage += _ownerPercentage[i];\\n            adminList[_owners[i]] = true;\\n        }\\n        owners = _owners;\\n        ownerPercentage = _ownerPercentage;\\n    }\\n\\n    /**\\n     * @notice Transfers ownership of the contract to a new account (`newOwner`).\\n     *         Can only be called by the current owner\\n     * @dev external for gas optimization\\n     * @param newOwner - address of new owner\\n     */\\n    function setController(address newOwner) external onlyOwner {\\n        require(newOwner != address(0), \\\"ERR_ZERO_ADDRESS\\\");\\n\\n        emit OwnershipTransferred(_owner, newOwner);\\n\\n        _owner = newOwner;\\n    }\\n\\n    /**\\n     * @notice Transfers ownership of the contract to a new account (`newOwner`).\\n     *         Can only be called by the current owner\\n     * @dev external for gas optimization\\n     * @param newOwner - address of new owner\\n     */\\n    function setAddAdminList(address newOwner, uint _ownerPercentage) external onlyOwner {\\n        require(!adminList[newOwner], \\\"Address is Owner\\\");\\n\\n        adminList[newOwner] = true;\\n        owners.push(newOwner);\\n        ownerPercentage.push(_ownerPercentage);\\n        allOwnerPercentage += _ownerPercentage;\\n        emit AddAdmin(newOwner, _ownerPercentage);\\n    }\\n\\n    /// @dev Allows to remove an owner. Transaction has to be sent by wallet.\\n    /// @param owner Address of owner.\\n    function removeOwner(address owner) external onlyOwner {\\n        adminList[owner] = false;\\n        uint amount = 0;\\n        for (uint i = 0; i < owners.length; i++) {\\n            if (owners[i] == owner) {\\n                owners[i] = owners[owners.length - 1];\\n                amount = ownerPercentage[i];\\n                ownerPercentage[i] = ownerPercentage[ownerPercentage.length - 1];\\n                break;\\n            }\\n        }\\n        owners.pop();\\n        ownerPercentage.pop();\\n        allOwnerPercentage -= amount;\\n        emit RemoveAdmin(owner, amount);\\n    }\\n\\n    // @dev Returns list of owners.\\n    // @return List of owner addresses.\\n    function getOwners() public view returns (address[] memory) {\\n        return owners;\\n    }\\n\\n    // @dev Returns list of owners.\\n    // @return List of owner addresses.\\n    function getOwnerPercentage() public view returns (uint[] memory) {\\n        return ownerPercentage;\\n    }\\n\\n    /**\\n     * @notice Returns the address of the current owner\\n     * @dev external for gas optimization\\n     * @return address - of the owner (AKA controller)\\n     */\\n    function getController() external view returns (address) {\\n        return _owner;\\n    }\\n}\\n\",\"keccak256\":\"0xd7f4d3132bf1b6abb6d07d9caf29a083ddb5d4319b59b573bf6008f4aef289af\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Desyn Labs",
    "kind": "dev",
    "methods": {
      "getController()": {
        "details": "external for gas optimization",
        "returns": {
          "_0": "address - of the owner (AKA controller)"
        }
      },
      "removeOwner(address)": {
        "details": "Allows to remove an owner. Transaction has to be sent by wallet.",
        "params": {
          "owner": "Address of owner."
        }
      },
      "setAddAdminList(address,uint256)": {
        "details": "external for gas optimization",
        "params": {
          "newOwner": "- address of new owner"
        }
      },
      "setController(address)": {
        "details": "external for gas optimization",
        "params": {
          "newOwner": "- address of new owner"
        }
      }
    },
    "title": "Vault managerFee",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getController()": {
        "notice": "Returns the address of the current owner"
      },
      "setAddAdminList(address,uint256)": {
        "notice": "Transfers ownership of the contract to a new account (`newOwner`).         Can only be called by the current owner"
      },
      "setController(address)": {
        "notice": "Transfers ownership of the contract to a new account (`newOwner`).         Can only be called by the current owner"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17889,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 17893,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "adminList",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 17896,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "owners",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 17899,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "ownerPercentage",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 17901,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "allOwnerPercentage",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12675,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "crpFactory",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(ICRPFactory)12627"
      },
      {
        "astId": 12679,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_manager",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 12684,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_manager_tokenList",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 12689,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_manager_tokenAmount",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 12694,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_issue_tokenList",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 12699,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_issue_tokenAmount",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 12704,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_redeem_tokenList",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 12709,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_redeem_tokenAmount",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 12714,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_perfermance_tokenList",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 12719,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_perfermance_tokenAmount",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 12723,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_manager_isClaim",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12727,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "black_list",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12731,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "record_number",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 12737,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "record_List",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(claimRecordInfo)12673_storage))"
      },
      {
        "astId": 12739,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "userVault",
        "offset": 0,
        "slot": "19",
        "type": "t_address"
      },
      {
        "astId": 12742,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "total_ratio",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 12745,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "manager_ratio",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 12748,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "issue_ratio",
        "offset": 0,
        "slot": "22",
        "type": "t_uint256"
      },
      {
        "astId": 12751,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "redeem_ratio",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 12754,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "perfermance_ratio",
        "offset": 0,
        "slot": "24",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(claimTokenInfo)12643_storage)dyn_storage": {
        "base": "t_struct(claimTokenInfo)12643_storage",
        "encoding": "dynamic_array",
        "label": "struct Vault.claimTokenInfo[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICRPFactory)12627": {
        "encoding": "inplace",
        "label": "contract ICRPFactory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(claimRecordInfo)12673_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct Vault.claimRecordInfo))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(claimRecordInfo)12673_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(claimRecordInfo)12673_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Vault.claimRecordInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(claimRecordInfo)12673_storage"
      },
      "t_struct(claimRecordInfo)12673_storage": {
        "encoding": "inplace",
        "label": "struct Vault.claimRecordInfo",
        "members": [
          {
            "astId": 12669,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "time",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 12672,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "tokens",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(claimTokenInfo)12643_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(claimTokenInfo)12643_storage": {
        "encoding": "inplace",
        "label": "struct Vault.claimTokenInfo",
        "members": [
          {
            "astId": 12638,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12640,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "decimals",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 12642,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
