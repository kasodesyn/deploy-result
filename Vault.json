{
  "address": "0xb8960833E5b8a42749BAe73BC0341737BE993EDF",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AddAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IssueRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LOGUserVaultAdr",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ManagerRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RedeemRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RemoveAdmin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "RATIO_ISSUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RATIO_MANAGER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RATIO_PERFERMANCE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RATIO_REDEEM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RATIO_TOTAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "adminClaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adminList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allOwnerPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "poolTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokensAmount",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokensAmountIR",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "isPerfermance",
          "type": "bool"
        }
      ],
      "name": "depositIssueRedeemPToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "poolTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokensAmount",
          "type": "uint256[]"
        }
      ],
      "name": "depositManagerToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBNB",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "getManagerClaimBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "bools",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerPercentage",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_ownerPercentage",
          "type": "uint256[]"
        }
      ],
      "name": "initHandle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "isClosePool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "managerClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "managerClaimList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Vault.ClaimTokenInfo[]",
          "name": "claimTokenInfos",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "managerClaimRecordList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "decimals",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Vault.ClaimTokenInfo[]",
              "name": "tokens",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Vault.ClaimRecordInfo[]",
          "name": "claimRecordInfos",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolIssueTokenAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenAmount",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolIssueTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolManagerTokenAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenAmount",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolManagerTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolPerfermanceTokenAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenAmount",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolPerfermanceTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolRedeemTokenAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenAmount",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolRedeemTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pool_manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolsStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "couldManagerClaim",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isBlackList",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "record_List",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "record_number",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ownerPercentage",
          "type": "uint256"
        }
      ],
      "name": "setAddAdminList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "bools",
          "type": "bool"
        }
      ],
      "name": "setBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "setCrpFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setIssueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setManagerRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setPerfermanceRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setRedeemRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "setUserVaultAdr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xffe4b2fdaba480902534c37ff9bc36051f1a832a31c3985a60224356cb69f84a",
  "receipt": {
    "to": null,
    "from": "0x595b85b4A418e3B8df897D02F5BD49167D00862F",
    "contractAddress": "0xb8960833E5b8a42749BAe73BC0341737BE993EDF",
    "transactionIndex": 1,
    "gasUsed": "4849351",
    "logsBloom": "0x
    "blockHash": "0x8e6aafc0c9d3c4fa125cae7aafdeadfc1c86f56db430a07d480cc4765a74d7bf",
    "transactionHash": "0xffe4b2fdaba480902534c37ff9bc36051f1a832a31c3985a60224356cb69f84a",
    "logs": [],
    "blockNumber": 8077399,
    "cumulativeGasUsed": "4952224",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5f6d7dee0cbbf6ed76ee6017fc498031",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IssueRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LOGUserVaultAdr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ManagerRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RedeemRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RemoveAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RATIO_ISSUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATIO_MANAGER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATIO_PERFERMANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATIO_REDEEM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATIO_TOTAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"adminClaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allOwnerPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmountIR\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"isPerfermance\",\"type\":\"bool\"}],\"name\":\"depositIssueRedeemPToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmount\",\"type\":\"uint256[]\"}],\"name\":\"depositManagerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBNB\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getManagerClaimBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"bools\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerPercentage\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ownerPercentage\",\"type\":\"uint256[]\"}],\"name\":\"initHandle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isClosePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"managerClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"managerClaimList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Vault.ClaimTokenInfo[]\",\"name\":\"claimTokenInfos\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"managerClaimRecordList\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Vault.ClaimTokenInfo[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Vault.ClaimRecordInfo[]\",\"name\":\"claimRecordInfos\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolIssueTokenAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolIssueTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolManagerTokenAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolManagerTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolPerfermanceTokenAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolPerfermanceTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolRedeemTokenAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolRedeemTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool_manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolsStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"couldManagerClaim\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isBlackList\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"record_List\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"record_number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ownerPercentage\",\"type\":\"uint256\"}],\"name\":\"setAddAdminList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"bools\",\"type\":\"bool\"}],\"name\":\"setBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"setCrpFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setIssueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setManagerRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setPerfermanceRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setRedeemRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"setUserVaultAdr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Desyn Labs\",\"kind\":\"dev\",\"methods\":{\"getController()\":{\"details\":\"external for gas optimization\",\"returns\":{\"_0\":\"address - of the owner (AKA controller)\"}},\"removeOwner(address)\":{\"details\":\"Allows to remove an owner. Transaction has to be sent by wallet.\",\"params\":{\"owner\":\"Address of owner.\"}},\"setAddAdminList(address,uint256)\":{\"details\":\"external for gas optimization\",\"params\":{\"newOwner\":\"- address of new owner\"}},\"setController(address)\":{\"details\":\"external for gas optimization\",\"params\":{\"newOwner\":\"- address of new owner\"}}},\"title\":\"Vault managerFee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getController()\":{\"notice\":\"Returns the address of the current owner\"},\"setAddAdminList(address,uint256)\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`).         Can only be called by the current owner\"},\"setController(address)\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`).         Can only be called by the current owner\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deploy/Vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/deploy/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\nlibrary SafeMath {\\n    function add(uint a, uint b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint a,\\n        uint b,\\n        string memory errorMessage\\n    ) internal pure returns (uint) {\\n        require(b <= a, errorMessage);\\n        uint c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint a,\\n        uint b,\\n        string memory errorMessage\\n    ) internal pure returns (uint) {\\n        require(b > 0, errorMessage);\\n        uint c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    function mod(uint a, uint b) internal pure returns (uint) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    function mod(\\n        uint a,\\n        uint b,\\n        string memory errorMessage\\n    ) internal pure returns (uint) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\\nlibrary Address {\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(account)\\n        }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    function sendValue(address payable recipient, uint amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint weiValue,\\n        string memory errorMessage\\n    ) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            if (returndata.length > 0) {\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\\npragma solidity 0.6.12;\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../utils/DesynOwnable.sol\\\";\\nimport \\\"../interfaces/IDSProxy.sol\\\";\\n// Contracts\\npragma experimental ABIEncoderV2;\\n\\ninterface ICRPPool {\\n    function getController() external view returns (address);\\n\\n    enum Etypes {\\n        OPENED,\\n        CLOSED\\n    }\\n\\n    function etype() external view returns (Etypes);\\n}\\n\\ninterface IToken {\\n    function decimals() external view returns (uint);\\n}\\n\\ninterface IUserVault {\\n    function depositToken(\\n        address pool,\\n        uint types,\\n        address[] calldata poolTokens,\\n        uint[] calldata tokensAmount\\n    ) external;\\n}\\n\\ninterface IDesynOwnable {\\n    function getOwners() external view returns (address[] memory);\\n\\n    function getOwnerPercentage() external view returns (uint[] memory);\\n\\n    function allOwnerPercentage() external view returns (uint);\\n}\\n\\ninterface ICRPFactory {\\n    function isCrp(address addr) external view returns (bool);\\n}\\n\\n/**\\n * @author Desyn Labs\\n * @title Vault managerFee\\n */\\ncontract Vault is DesynOwnable {\\n    using SafeMath for uint;\\n    using Address for address;\\n\\n    ICRPFactory crpFactory;\\n    address public userVault;\\n\\n    event ManagerRatio(address indexed caller, uint indexed amount);\\n    event LOGUserVaultAdr(address indexed manager, address indexed caller);\\n    event IssueRatio(address indexed caller, uint indexed amount);\\n    event RedeemRatio(address indexed caller, uint indexed amount);\\n\\n    struct ClaimTokenInfo {\\n        address token;\\n        uint decimals;\\n        uint amount;\\n    }\\n\\n    struct ClaimRecordInfo {\\n        uint time;\\n        ClaimTokenInfo[] tokens;\\n    }\\n\\n    // pool of tokens\\n    struct PoolTokens {\\n        address[] tokenList;\\n        address[] issueTokens;\\n        address[] redeemTokens;\\n        address[] perfermanceTokens;\\n        uint[] managerAmount;\\n        uint[] issueAmount;\\n        uint[] redeemAmount;\\n        uint[] perfermanceAmount;\\n    }\\n\\n    struct PoolStatus {\\n        bool couldManagerClaim;\\n        bool isBlackList;\\n    }\\n\\n    // pool tokens\\n    mapping(address => PoolTokens) poolsTokens;\\n    mapping(address => PoolStatus) public poolsStatus;\\n\\n    //history record\\n    mapping(address => uint) public record_number;\\n    mapping(address => mapping(uint => ClaimRecordInfo)) public record_List;\\n\\n    //pool=>manager\\n    mapping(address => address) public pool_manager;\\n\\n    // default ratio config\\n    uint public RATIO_TOTAL = 1000;\\n    uint public RATIO_MANAGER = 800;\\n    uint public RATIO_ISSUE = 800;\\n    uint public RATIO_REDEEM = 800;\\n    uint public RATIO_PERFERMANCE = 800;\\n\\n    receive() external payable {}\\n\\n    // \\u5b58\\u5165token\\n    function depositManagerToken(address[] calldata poolTokens, uint[] calldata tokensAmount) external {\\n        address pool = msg.sender;\\n        require(crpFactory.isCrp(pool), \\\"ERR_INVALID_POOL_ADDRESS\\\");\\n        require(poolTokens.length == tokensAmount.length, \\\"ERR_TOKEN_LENGTH_NOT_MATCH\\\");\\n        if (pool_manager[pool] == address(0)) {\\n            pool_manager[pool] = ICRPPool(pool).getController();\\n        }\\n\\n        PoolTokens storage tokens = poolsTokens[pool];\\n\\n        (address[] memory new_pool_tokenList, uint[] memory new_pool_tokenAmount) = communaldepositToken(\\n            poolTokens,\\n            tokensAmount,\\n            pool,\\n            tokens.tokenList,\\n            tokens.managerAmount\\n        );\\n        tokens.tokenList = new_pool_tokenList;\\n        tokens.managerAmount = new_pool_tokenAmount;\\n        poolsStatus[pool].couldManagerClaim = true;\\n        if (this.isClosePool(pool)) {\\n            try this.managerClaim(pool) {} catch {}\\n        }\\n    }\\n\\n    // \\u5b58\\u5165token\\n    function depositIssueRedeemPToken(\\n        address[] calldata poolTokens,\\n        uint[] calldata tokensAmount,\\n        uint[] calldata tokensAmountIR,\\n        bool isPerfermance\\n    ) external {\\n        address pool = msg.sender;\\n        require(crpFactory.isCrp(pool), \\\"ERR_INVALID_POOL_ADDRESS\\\");\\n        require(poolTokens.length == tokensAmount.length, \\\"ERR_TOKEN_LENGTH_NOT_MATCH\\\");\\n        if (pool_manager[pool] == address(0)) {\\n            pool_manager[pool] = ICRPPool(pool).getController();\\n        }\\n        PoolTokens storage tokens = poolsTokens[pool];\\n\\n        if (!isPerfermance) {\\n            (address[] memory new_pool_tokenList, uint[] memory new_pool_tokenAmount) = communaldepositToken(\\n                poolTokens,\\n                tokensAmount,\\n                pool,\\n                tokens.issueTokens,\\n                tokens.issueAmount\\n            );\\n            tokens.issueTokens = new_pool_tokenList;\\n            tokens.issueAmount = new_pool_tokenAmount;\\n        } \\n        if (isPerfermance) {\\n            (\\n                address[] memory new_pool_tokenList,\\n                uint[] memory new_pool_tokenAmount,\\n                address[] memory new_pool_tokenListP,\\n                uint[] memory new_pool_tokenAmountP\\n            ) = communaldepositTokenNew(poolTokens, tokensAmount, tokensAmountIR, pool);\\n            tokens.redeemTokens = new_pool_tokenList;\\n            tokens.redeemAmount = new_pool_tokenAmount;\\n            tokens.perfermanceTokens = new_pool_tokenListP;\\n            tokens.perfermanceAmount = new_pool_tokenAmountP;\\n        }\\n\\n        poolsStatus[pool].couldManagerClaim = true;\\n        if (this.isClosePool(pool)) {\\n            try this.managerClaim(pool) {} catch {}\\n        }\\n    }\\n\\n    function communaldepositToken(\\n        address[] calldata poolTokens,\\n        uint[] calldata tokensAmount,\\n        address poolAdr,\\n        address[] memory _pool_tokenList,\\n        uint[] memory _pool_tokenAmount\\n    ) internal returns (address[] memory new_pool_tokenList, uint[] memory new_pool_tokenAmount) {\\n        uint len = poolTokens.length;\\n        //old\\n        //new\\n        new_pool_tokenList = new address[](len);\\n        new_pool_tokenAmount = new uint[](len);\\n        if ((_pool_tokenList.length == _pool_tokenAmount.length && _pool_tokenList.length == 0) || !poolsStatus[poolAdr].couldManagerClaim) {\\n            for (uint i = 0; i < len; i++) {\\n                address t = poolTokens[i];\\n                uint tokenBalance = tokensAmount[i];\\n                IERC20(t).transferFrom(msg.sender, address(this), tokenBalance);\\n                new_pool_tokenList[i] = poolTokens[i];\\n                new_pool_tokenAmount[i] = tokensAmount[i];\\n            }\\n        } else {\\n            for (uint k = 0; k < len; k++) {\\n                if (_pool_tokenList[k] == poolTokens[k]) {\\n                    address t = poolTokens[k];\\n                    uint tokenBalance = tokensAmount[k];\\n                    IERC20(t).transferFrom(msg.sender, address(this), tokenBalance);\\n                    new_pool_tokenList[k] = poolTokens[k];\\n                    new_pool_tokenAmount[k] = _pool_tokenAmount[k].add(tokenBalance);\\n                }\\n            }\\n        }\\n        return (new_pool_tokenList, new_pool_tokenAmount);\\n    }\\n\\n    function communaldepositTokenNew(\\n        address[] calldata poolTokens,\\n        uint[] calldata tokensAmount,\\n        uint[] calldata tokensAmountIR,\\n        address poolAdr\\n    )\\n        internal\\n        returns (\\n            address[] memory new_pool_tokenList,\\n            uint[] memory new_pool_tokenAmount,\\n            address[] memory new_pool_tokenListP,\\n            uint[] memory new_pool_tokenAmountP\\n        )\\n    {\\n        uint len = poolTokens.length;\\n        //old\\n        //new\\n        new_pool_tokenList = new address[](len);\\n        new_pool_tokenAmount = new uint[](len);\\n        new_pool_tokenListP = new address[](len);\\n        new_pool_tokenAmountP = new uint[](len);\\n\\n        PoolTokens storage tokens = poolsTokens[poolAdr];\\n\\n        //issue_redeem\\n        if ((tokens.redeemTokens.length == tokens.redeemAmount.length && tokens.redeemTokens.length == 0) || !poolsStatus[poolAdr].couldManagerClaim) {\\n            for (uint i = 0; i < len; i++) {\\n                uint tokenBalance = tokensAmount[i];\\n                IERC20(poolTokens[i]).transferFrom(msg.sender, address(this), tokenBalance);\\n                new_pool_tokenList[i] = poolTokens[i];\\n                new_pool_tokenAmount[i] = tokensAmountIR[i];\\n            }\\n        } else {\\n            for (uint k = 0; k < len; k++) {\\n                if (tokens.redeemTokens[k] == poolTokens[k]) {\\n                    uint tokenBalance = tokensAmount[k];\\n                    IERC20(poolTokens[k]).transferFrom(msg.sender, address(this), tokenBalance);\\n                    new_pool_tokenList[k] = poolTokens[k];\\n                    new_pool_tokenAmount[k] = tokens.perfermanceAmount[k].add(tokensAmountIR[k]);\\n                }\\n            }\\n        }\\n        //perfermance\\n        if ((tokens.perfermanceTokens.length == tokens.perfermanceAmount.length && tokens.perfermanceTokens.length == 0) || !poolsStatus[poolAdr].couldManagerClaim) {\\n            for (uint i = 0; i < len; i++) {\\n                new_pool_tokenListP[i] = poolTokens[i];\\n                new_pool_tokenAmountP[i] = tokensAmount[i].sub(tokensAmountIR[i]);\\n            }\\n        } else {\\n            for (uint k = 0; k < len; k++) {\\n                new_pool_tokenListP[k] = poolTokens[k];\\n                new_pool_tokenAmountP[k] = tokens.perfermanceAmount[k].add(tokensAmount[k].sub(tokensAmountIR[k]));\\n            }\\n        }\\n\\n        return (new_pool_tokenList, new_pool_tokenAmount, new_pool_tokenListP, new_pool_tokenAmountP);\\n    }\\n\\n    function poolManagerTokenList(address pool) external view returns (address[] memory tokens) {\\n        return poolsTokens[pool].tokenList;\\n    }\\n\\n    function poolManagerTokenAmount(address pool) external view returns (uint[] memory tokenAmount) {\\n        return poolsTokens[pool].managerAmount;\\n    }\\n\\n    function poolIssueTokenList(address pool) external view returns (address[] memory tokens) {\\n        return poolsTokens[pool].issueTokens;\\n    }\\n\\n    function poolRedeemTokenList(address pool) external view returns (address[] memory tokens) {\\n        return poolsTokens[pool].redeemTokens;\\n    }\\n\\n    function poolIssueTokenAmount(address pool) external view returns (uint[] memory tokenAmount) {\\n        return poolsTokens[pool].issueAmount;\\n    }\\n\\n    function poolRedeemTokenAmount(address pool) external view returns (uint[] memory tokenAmount) {\\n        return poolsTokens[pool].redeemAmount;\\n    }\\n\\n    function poolPerfermanceTokenList(address pool) external view returns (address[] memory tokens) {\\n        return poolsTokens[pool].perfermanceTokens;\\n    }\\n\\n    function poolPerfermanceTokenAmount(address pool) external view returns (uint[] memory tokenAmount) {\\n        return poolsTokens[pool].perfermanceAmount;\\n    }\\n\\n    function getManagerClaimBool(address pool) external view returns (bool bools) {\\n        bools = poolsStatus[pool].couldManagerClaim;\\n    }\\n\\n    function setBlackList(address pool, bool bools) external onlyOwner {\\n        poolsStatus[pool].isBlackList = bools;\\n    }\\n\\n    function setUserVaultAdr(address adr) external onlyOwner {\\n        require(adr != address(0), \\\"ERR_INVALID_USERVAULT_ADDRESS\\\");\\n        userVault = adr;\\n        emit LOGUserVaultAdr(adr, msg.sender);\\n    }\\n\\n    function setCrpFactory(address adr) external onlyOwner {\\n        crpFactory = ICRPFactory(adr);\\n    }\\n\\n    function adminClaimToken(\\n        address token,\\n        address user,\\n        uint amount\\n    ) external onlyOwner {\\n        IERC20(token).transfer(user, amount);\\n    }\\n\\n    function getBNB() external payable onlyOwner {\\n        msg.sender.transfer(address(this).balance);\\n    }\\n\\n    function setManagerRatio(uint amount) external onlyOwner {\\n        require(amount <= RATIO_TOTAL, \\\"Maximum limit exceeded\\\");\\n        RATIO_MANAGER = amount;\\n        emit ManagerRatio(msg.sender, amount);\\n    }\\n\\n    function setIssueRatio(uint amount) external onlyOwner {\\n        require(amount <= RATIO_TOTAL, \\\"Maximum limit exceeded\\\");\\n        RATIO_ISSUE = amount;\\n        emit IssueRatio(msg.sender, amount);\\n    }\\n\\n    function setRedeemRatio(uint amount) external onlyOwner {\\n        require(amount <= RATIO_TOTAL, \\\"Maximum limit exceeded\\\");\\n        RATIO_REDEEM = amount;\\n        emit RedeemRatio(msg.sender, amount);\\n    }\\n\\n    function setPerfermanceRatio(uint amount) external onlyOwner {\\n        RATIO_PERFERMANCE = amount;\\n    }\\n\\n    function managerClaim(address pool) external {\\n        require(crpFactory.isCrp(pool), \\\"ERR_INVALID_POOL_ADDRESS\\\");\\n        address manager_address = ICRPPool(pool).getController();\\n\\n        PoolTokens memory tokens = poolsTokens[pool];\\n        PoolStatus storage status = poolsStatus[pool];\\n\\n        address[] memory _pool_manager_tokenList = tokens.tokenList.length != 0\\n            ? tokens.tokenList\\n            : (tokens.issueTokens.length != 0 ? tokens.issueTokens : (tokens.redeemTokens.length != 0 ? tokens.redeemTokens : tokens.perfermanceTokens));\\n        uint len = _pool_manager_tokenList.length;\\n        require(!status.isBlackList, \\\"ERR_POOL_IS_BLACKLIST\\\");\\n        require(pool_manager[pool] == manager_address, \\\"ERR_IS_NOT_MANAGER\\\");\\n        require(len > 0, \\\"ERR_NOT_MANGER_FEE\\\");\\n        require(status.couldManagerClaim, \\\"ERR_MANAGER_COULD_NOT_CLAIM\\\");\\n        status.couldManagerClaim = false;\\n        //record\\n        ClaimRecordInfo storage recordInfo = record_List[pool][record_number[pool].add(1)];\\n        delete recordInfo.time;\\n        delete recordInfo.tokens;\\n        recordInfo.time = block.timestamp;\\n        uint[] memory managerTokenAmount = new uint[](len);\\n        uint[] memory issueTokenAmount = new uint[](len);\\n        uint[] memory redeemTokenAmount = new uint[](len);\\n        uint[] memory perfermanceTokenAmount = new uint[](len);\\n        for (uint i = 0; i < len; i++) {\\n            uint balance;\\n            ClaimTokenInfo memory tokenInfo;\\n            (balance, managerTokenAmount[i], issueTokenAmount[i], redeemTokenAmount[i], perfermanceTokenAmount[i]) = computeBalance(i, pool);\\n            address t = _pool_manager_tokenList[i];\\n            tokenInfo.token = t;\\n            tokenInfo.amount = balance;\\n            tokenInfo.decimals = IToken(t).decimals();\\n            recordInfo.tokens.push(tokenInfo);\\n            transferHandle(pool, manager_address, t, balance);\\n        }\\n        if (this.isClosePool(pool)) {\\n            recordUserVault(pool, _pool_manager_tokenList, managerTokenAmount, issueTokenAmount, redeemTokenAmount, perfermanceTokenAmount);\\n        }\\n\\n        record_number[pool] = record_number[pool].add(1);\\n        record_List[pool][record_number[pool]] = recordInfo;\\n        clearPool(pool);\\n    }\\n\\n    function recordUserVault(\\n        address pool,\\n        address[] memory tokenList,\\n        uint[] memory managerTokenAmount,\\n        uint[] memory issueTokenAmount,\\n        uint[] memory redeemTokenAmount,\\n        uint[] memory perfermanceTokenAmount\\n    ) internal {\\n        PoolTokens memory tokens = poolsTokens[pool];\\n\\n        if (tokens.managerAmount.length != 0) {\\n            IUserVault(userVault).depositToken(pool, 0, tokenList, managerTokenAmount);\\n        }\\n        if (tokens.issueAmount.length != 0) {\\n            IUserVault(userVault).depositToken(pool, 1, tokenList, issueTokenAmount);\\n        }\\n        if (tokens.redeemAmount.length != 0) {\\n            IUserVault(userVault).depositToken(pool, 2, tokenList, redeemTokenAmount);\\n        }\\n        if (tokens.perfermanceAmount.length != 0) {\\n            IUserVault(userVault).depositToken(pool, 3, tokenList, perfermanceTokenAmount);\\n        }\\n    }\\n\\n    function transferHandle(\\n        address pool,\\n        address manager_address,\\n        address t,\\n        uint balance\\n    ) internal {\\n        bool isCloseETF = this.isClosePool(pool);\\n        bool isOpenETF = !isCloseETF;\\n        bool isContractManager = manager_address.isContract();\\n\\n        if(isCloseETF){\\n            IERC20(t).transfer(userVault, balance);\\n        }\\n\\n        if(isOpenETF && isContractManager){\\n            address[] memory managerAddressList = IDesynOwnable(pool).getOwners();\\n            uint[] memory ownerPercentage = IDesynOwnable(pool).getOwnerPercentage();\\n            uint allOwnerPercentage = IDesynOwnable(pool).allOwnerPercentage();\\n\\n            for (uint k = 0; k < managerAddressList.length; k++) {\\n                address reciver = address(managerAddressList[k]).isContract()? IDSProxy(managerAddressList[k]).owner(): managerAddressList[k];\\n                IERC20(t).transfer(reciver, balance.mul(ownerPercentage[k]).div(allOwnerPercentage));\\n            }\\n        }\\n\\n        if(isOpenETF && !isContractManager){\\n            IERC20(t).transfer(manager_address, balance);\\n        }\\n    }\\n\\n    function computeBalance(uint i, address pool)\\n        internal\\n        view\\n        returns (\\n            uint balance,\\n            uint balanceOne,\\n            uint balanceTwo,\\n            uint balanceThree,\\n            uint balanceFour\\n        )\\n    {\\n        PoolTokens memory tokens = poolsTokens[pool];\\n\\n        //manager fee\\n        if (tokens.managerAmount.length != 0) {\\n            balanceOne = tokens.managerAmount[i].mul(RATIO_MANAGER).div(RATIO_TOTAL);\\n            balance = balance.add(balanceOne);\\n        }\\n        if (tokens.issueAmount.length != 0) {\\n            balanceTwo = tokens.issueAmount[i].mul(RATIO_ISSUE).div(RATIO_TOTAL);\\n            balance = balance.add(balanceTwo);\\n        }\\n        if (tokens.redeemAmount.length != 0) {\\n            balanceThree = tokens.redeemAmount[i].mul(RATIO_REDEEM).div(RATIO_TOTAL);\\n            balance = balance.add(balanceThree);\\n        }\\n        if (tokens.perfermanceAmount.length != 0) {\\n            balanceFour = tokens.perfermanceAmount[i].mul(RATIO_PERFERMANCE).div(RATIO_TOTAL);\\n            balance = balance.add(balanceFour);\\n        }\\n    }\\n\\n    function isClosePool(address pool) external view returns (bool) {\\n        return ICRPPool(pool).etype() == ICRPPool.Etypes.CLOSED;\\n    }\\n\\n    function clearPool(address pool) internal {\\n        delete poolsTokens[pool];\\n    }\\n\\n    function managerClaimRecordList(address pool) external view returns (ClaimRecordInfo[] memory claimRecordInfos) {\\n        uint num = record_number[pool];\\n        ClaimRecordInfo[] memory records = new ClaimRecordInfo[](num);\\n        for (uint i = 1; i < num + 1; i++) {\\n            ClaimRecordInfo memory record;\\n            record = record_List[pool][i];\\n            records[i.sub(1)] = record;\\n        }\\n        return records;\\n    }\\n\\n    function managerClaimList(address pool) external view returns (ClaimTokenInfo[] memory claimTokenInfos) {\\n        PoolTokens memory tokens = poolsTokens[pool];\\n        address[] memory _pool_manager_tokenList = tokens.tokenList.length != 0\\n            ? tokens.tokenList\\n            : (tokens.issueTokens.length != 0 ? tokens.issueTokens : (tokens.redeemTokens.length != 0 ? tokens.redeemTokens : tokens.perfermanceTokens));\\n        uint len = _pool_manager_tokenList.length;\\n\\n        ClaimTokenInfo[] memory infos = new ClaimTokenInfo[](len);\\n        for (uint i = 0; i < len; i++) {\\n            {\\n                ClaimTokenInfo memory tokenInfo;\\n                tokenInfo.token = _pool_manager_tokenList[i];\\n\\n                (uint balance,,,,) = computeBalance(i,pool);\\n                tokenInfo.amount = balance;\\n                tokenInfo.decimals = IToken(_pool_manager_tokenList[i]).decimals();\\n                \\n                infos[i] = tokenInfo;\\n            }\\n        }\\n\\n        return infos;\\n    }\\n}\\n\",\"keccak256\":\"0x15b1afdbbaab1494273985f3e48fcc32e2c13ff8dfc2232778bd141240a96338\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IDSProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\ninterface IDSProxy {\\n    function owner() external view returns(address);\\n}\",\"keccak256\":\"0xe330359819e40d60365ba92005c9b8b1eccdf18ae583352a0cff0a2a4cf7ff14\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\n// Interface declarations\\n\\n/* solhint-disable func-order */\\n\\ninterface IERC20 {\\n    // Emitted when the allowance of a spender for an owner is set by a call to approve.\\n    // Value is the new allowance\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n\\n    // Emitted when value tokens are moved from one account (from) to another (to).\\n    // Note that value may be zero\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    // Returns the amount of tokens in existence\\n    function totalSupply() external view returns (uint);\\n\\n    // Returns the amount of tokens owned by account\\n    function balanceOf(address account) external view returns (uint);\\n\\n    // Returns the decimals of tokens\\n    function decimals() external view returns (uint8);\\n\\n    function symbol() external view returns (string memory);\\n\\n    // Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner\\n    // through transferFrom. This is zero by default\\n    // This value changes when approve or transferFrom are called\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    // Sets amount as the allowance of spender over the caller\\u2019s tokens\\n    // Returns a boolean value indicating whether the operation succeeded\\n    // Emits an Approval event.\\n    function approve(address spender, uint amount) external returns (bool);\\n\\n    // Moves amount tokens from the caller\\u2019s account to recipient\\n    // Returns a boolean value indicating whether the operation succeeded\\n    // Emits a Transfer event.\\n    function transfer(address recipient, uint amount) external returns (bool);\\n\\n    // Moves amount tokens from sender to recipient using the allowance mechanism\\n    // Amount is then deducted from the caller\\u2019s allowance\\n    // Returns a boolean value indicating whether the operation succeeded\\n    // Emits a Transfer event\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0xfe22b6d6029b400b9cce7f9b39c546f99cd6922b2fd926e480e2b4d476ab26f8\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/DesynOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract DesynOwnable {\\n    // State variables\\n\\n    address private _owner;\\n    mapping(address => bool) public adminList;\\n    address[] public owners;\\n    uint[] public ownerPercentage;\\n    uint public allOwnerPercentage;\\n    bool private initialized;\\n    // Event declarations\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event AddAdmin(address indexed newAdmin, uint indexed amount);\\n    event RemoveAdmin(address indexed oldAdmin, uint indexed amount);\\n\\n    // Modifiers\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"ERR_NOT_CONTROLLER\\\");\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(adminList[msg.sender] || msg.sender == _owner, \\\"onlyAdmin\\\");\\n        _;\\n    }\\n\\n    // Function declarations\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() internal {\\n        _owner = msg.sender;\\n    }\\n\\n    function initHandle(address[] memory _owners, uint[] memory _ownerPercentage) external onlyOwner {\\n        require(_owners.length == _ownerPercentage.length, \\\"ownerP\\\");\\n        require(!initialized, \\\"initialized!\\\");\\n        for (uint i = 0; i < _owners.length; i++) {\\n            allOwnerPercentage += _ownerPercentage[i];\\n            adminList[_owners[i]] = true;\\n        }\\n        owners = _owners;\\n        ownerPercentage = _ownerPercentage;\\n\\n        initialized = true;\\n    }\\n\\n    /**\\n     * @notice Transfers ownership of the contract to a new account (`newOwner`).\\n     *         Can only be called by the current owner\\n     * @dev external for gas optimization\\n     * @param newOwner - address of new owner\\n     */\\n    function setController(address newOwner) external onlyOwner {\\n        require(newOwner != address(0), \\\"ERR_ZERO_ADDRESS\\\");\\n\\n        emit OwnershipTransferred(_owner, newOwner);\\n\\n        _owner = newOwner;\\n    }\\n\\n    /**\\n     * @notice Transfers ownership of the contract to a new account (`newOwner`).\\n     *         Can only be called by the current owner\\n     * @dev external for gas optimization\\n     * @param newOwner - address of new owner\\n     */\\n    function setAddAdminList(address newOwner, uint _ownerPercentage) external onlyOwner {\\n        require(!adminList[newOwner], \\\"Address is Owner\\\");\\n\\n        adminList[newOwner] = true;\\n        owners.push(newOwner);\\n        ownerPercentage.push(_ownerPercentage);\\n        allOwnerPercentage += _ownerPercentage;\\n        emit AddAdmin(newOwner, _ownerPercentage);\\n    }\\n\\n    /// @dev Allows to remove an owner. Transaction has to be sent by wallet.\\n    /// @param owner Address of owner.\\n    function removeOwner(address owner) external onlyOwner {\\n        adminList[owner] = false;\\n        uint amount = 0;\\n        for (uint i = 0; i < owners.length; i++) {\\n            if (owners[i] == owner) {\\n                owners[i] = owners[owners.length - 1];\\n                amount = ownerPercentage[i];\\n                ownerPercentage[i] = ownerPercentage[ownerPercentage.length - 1];\\n                break;\\n            }\\n        }\\n        owners.pop();\\n        ownerPercentage.pop();\\n        allOwnerPercentage -= amount;\\n        emit RemoveAdmin(owner, amount);\\n    }\\n\\n    // @dev Returns list of owners.\\n    // @return List of owner addresses.\\n    function getOwners() public view returns (address[] memory) {\\n        return owners;\\n    }\\n\\n    // @dev Returns list of owners.\\n    // @return List of owner addresses.\\n    function getOwnerPercentage() public view returns (uint[] memory) {\\n        return ownerPercentage;\\n    }\\n\\n    /**\\n     * @notice Returns the address of the current owner\\n     * @dev external for gas optimization\\n     * @return address - of the owner (AKA controller)\\n     */\\n    function getController() external view returns (address) {\\n        return _owner;\\n    }\\n}\\n\",\"keccak256\":\"0x9ed25e36bdc9ad4a3159c03fdd2d8118cb50ee28a62de58b74ef316ec4bbbd1d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "libraries": {},
  "devdoc": {
    "author": "Desyn Labs",
    "kind": "dev",
    "methods": {
      "getController()": {
        "details": "external for gas optimization",
        "returns": {
          "_0": "address - of the owner (AKA controller)"
        }
      },
      "removeOwner(address)": {
        "details": "Allows to remove an owner. Transaction has to be sent by wallet.",
        "params": {
          "owner": "Address of owner."
        }
      },
      "setAddAdminList(address,uint256)": {
        "details": "external for gas optimization",
        "params": {
          "newOwner": "- address of new owner"
        }
      },
      "setController(address)": {
        "details": "external for gas optimization",
        "params": {
          "newOwner": "- address of new owner"
        }
      }
    },
    "title": "Vault managerFee",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getController()": {
        "notice": "Returns the address of the current owner"
      },
      "setAddAdminList(address,uint256)": {
        "notice": "Transfers ownership of the contract to a new account (`newOwner`).         Can only be called by the current owner"
      },
      "setController(address)": {
        "notice": "Transfers ownership of the contract to a new account (`newOwner`).         Can only be called by the current owner"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18293,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 18297,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "adminList",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 18300,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "owners",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 18303,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "ownerPercentage",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 18305,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "allOwnerPercentage",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 18307,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "initialized",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 12894,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "crpFactory",
        "offset": 1,
        "slot": "5",
        "type": "t_contract(ICRPFactory)12883"
      },
      {
        "astId": 12896,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "userVault",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 12967,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "poolsTokens",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(PoolTokens)12958_storage)"
      },
      {
        "astId": 12971,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "poolsStatus",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(PoolStatus)12963_storage)"
      },
      {
        "astId": 12975,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "record_number",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 12981,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "record_List",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ClaimRecordInfo)12933_storage))"
      },
      {
        "astId": 12985,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "pool_manager",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 12988,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "RATIO_TOTAL",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 12991,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "RATIO_MANAGER",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 12994,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "RATIO_ISSUE",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 12997,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "RATIO_REDEEM",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 13000,
        "contract": "contracts/deploy/Vault.sol:Vault",
        "label": "RATIO_PERFERMANCE",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(ClaimTokenInfo)12927_storage)dyn_storage": {
        "base": "t_struct(ClaimTokenInfo)12927_storage",
        "encoding": "dynamic_array",
        "label": "struct Vault.ClaimTokenInfo[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICRPFactory)12883": {
        "encoding": "inplace",
        "label": "contract ICRPFactory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(ClaimRecordInfo)12933_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct Vault.ClaimRecordInfo))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(ClaimRecordInfo)12933_storage)"
      },
      "t_mapping(t_address,t_struct(PoolStatus)12963_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Vault.PoolStatus)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolStatus)12963_storage"
      },
      "t_mapping(t_address,t_struct(PoolTokens)12958_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Vault.PoolTokens)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolTokens)12958_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(ClaimRecordInfo)12933_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Vault.ClaimRecordInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(ClaimRecordInfo)12933_storage"
      },
      "t_struct(ClaimRecordInfo)12933_storage": {
        "encoding": "inplace",
        "label": "struct Vault.ClaimRecordInfo",
        "members": [
          {
            "astId": 12929,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "time",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 12932,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "tokens",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(ClaimTokenInfo)12927_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(ClaimTokenInfo)12927_storage": {
        "encoding": "inplace",
        "label": "struct Vault.ClaimTokenInfo",
        "members": [
          {
            "astId": 12922,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12924,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "decimals",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 12926,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(PoolStatus)12963_storage": {
        "encoding": "inplace",
        "label": "struct Vault.PoolStatus",
        "members": [
          {
            "astId": 12960,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "couldManagerClaim",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 12962,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "isBlackList",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(PoolTokens)12958_storage": {
        "encoding": "inplace",
        "label": "struct Vault.PoolTokens",
        "members": [
          {
            "astId": 12936,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "tokenList",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 12939,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "issueTokens",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 12942,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "redeemTokens",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 12945,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "perfermanceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 12948,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "managerAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 12951,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "issueAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 12954,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "redeemAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 12957,
            "contract": "contracts/deploy/Vault.sol:Vault",
            "label": "perfermanceAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
